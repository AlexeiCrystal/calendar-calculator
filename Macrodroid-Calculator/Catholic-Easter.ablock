{"macro":{"isInputExpanded":true,"isLocalExpanded":false,"isOutputExpanded":true,"isTestMode":false,"disabledTimestamp":0,"forceEvenIfNotEnabledTimestamp":0,"isActionBlock":true,"isExtra":false,"isFavourite":false,"lastEditedTimestamp":1745062904195,"localVariables":[{"description":"Date of Catholic Easter format day.month","dictionary":{"entries":[],"isArray":false,"variableType":4,"type":"Dictionary"},"isActionBlockWorkingVar":false,"isLocalVar":true,"isSecure":false,"m_booleanValue":false,"m_decimalValue":0.0,"m_intValue":0,"m_name":"date","m_stringValue":"","m_type":2,"supportsInput":false,"supportsOutput":true},{"description":"The month of Catholic Easter","dictionary":{"entries":[],"isArray":false,"variableType":4,"type":"Dictionary"},"isActionBlockWorkingVar":false,"isLocalVar":true,"isSecure":false,"m_booleanValue":false,"m_decimalValue":0.0,"m_intValue":0,"m_name":"month","m_stringValue":"","m_type":2,"supportsInput":false,"supportsOutput":true},{"description":"Catholic Easter Day","dictionary":{"entries":[],"isArray":false,"variableType":4,"type":"Dictionary"},"isActionBlockWorkingVar":false,"isLocalVar":true,"isSecure":false,"m_booleanValue":false,"m_decimalValue":0.0,"m_intValue":0,"m_name":"day","m_stringValue":"","m_type":2,"supportsInput":false,"supportsOutput":true},{"description":"The year in which you want to know the date of Catholic Easter","dictionary":{"entries":[],"isArray":false,"variableType":4,"type":"Dictionary"},"isActionBlockWorkingVar":false,"isLocalVar":true,"isSecure":false,"m_booleanValue":false,"m_decimalValue":0.0,"m_intValue":0,"m_name":"year","m_stringValue":"","m_type":1,"supportsInput":true,"supportsOutput":false}],"localVarsAlphabetical":true,"m_GUID":-4927977606121436617,"m_actionList":[{"blockNextAction":true,"consoleVariableName":"date","javascriptEngine":"JetPack JavascriptEngine","scriptText":"// Code by github.com/AlexeiCrystal\nfunction catholicEaster(CatholicEasterCalculateYear) {\n    const mod19Result \u003d CatholicEasterCalculateYear % 19;\n    const centuryQuotient \u003d Math.floor(CatholicEasterCalculateYear / 100);\n    const yearInCentury \u003d CatholicEasterCalculateYear % 100;\n    const centuryDiv4 \u003d Math.floor(centuryQuotient / 4);\n    const centuryMod4 \u003d centuryQuotient % 4;\n    const centuryAdjust \u003d Math.floor((centuryQuotient + 8) / 25);\n    const centuryAdjust2 \u003d Math.floor((centuryQuotient - centuryAdjust + 1) / 3);\n    const paschalFullMoonOffset \u003d (19 * mod19Result + centuryQuotient - centuryDiv4 - centuryAdjust2 + 15) % 30;\n    const yearInCenturyDiv4 \u003d Math.floor(yearInCentury / 4);\n    const yearInCenturyMod4 \u003d yearInCentury % 4;\n    const sundayOffset \u003d (32 + 2 * centuryMod4 + 2 * yearInCenturyDiv4 - paschalFullMoonOffset - yearInCenturyMod4) % 7;\n    const paschalAdjustment \u003d Math.floor((mod19Result + 11 * paschalFullMoonOffset + 22 * sundayOffset) / 451);\n    const computedMonth \u003d Math.floor((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) / 31);\n    const computedDay \u003d ((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) % 31) + 1;\n    const tempDate \u003d new Date(CatholicEasterCalculateYear, computedMonth - 1, computedDay);\n    const adjustedDay \u003d tempDate.getDate();\n    const adjustedMonth \u003d tempDate.getMonth() + 1; \n    return `${adjustedDay}.${adjustedMonth}`;\n}\n\nfunction catholicEasterDay(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[0], 10);\n}\n\nfunction catholicEasterMonth(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[1], 10);\n}\n\n\nconsole.log(catholicEaster({lv\u003dyear}));","disableLogging":false,"m_SIGUID":-8900430115749201390,"m_classType":"JavaScriptAction","m_comment":"Code by github.com/AlexeiCrystal","m_constraintList":[],"m_isDisabled":false,"m_isOrCondition":false},{"blockNextAction":true,"consoleVariableName":"day","javascriptEngine":"JetPack JavascriptEngine","scriptText":"// Code by github.com/AlexeiCrystal\nfunction catholicEaster(CatholicEasterCalculateYear) {\n    const mod19Result \u003d CatholicEasterCalculateYear % 19;\n    const centuryQuotient \u003d Math.floor(CatholicEasterCalculateYear / 100);\n    const yearInCentury \u003d CatholicEasterCalculateYear % 100;\n    const centuryDiv4 \u003d Math.floor(centuryQuotient / 4);\n    const centuryMod4 \u003d centuryQuotient % 4;\n    const centuryAdjust \u003d Math.floor((centuryQuotient + 8) / 25);\n    const centuryAdjust2 \u003d Math.floor((centuryQuotient - centuryAdjust + 1) / 3);\n    const paschalFullMoonOffset \u003d (19 * mod19Result + centuryQuotient - centuryDiv4 - centuryAdjust2 + 15) % 30;\n    const yearInCenturyDiv4 \u003d Math.floor(yearInCentury / 4);\n    const yearInCenturyMod4 \u003d yearInCentury % 4;\n    const sundayOffset \u003d (32 + 2 * centuryMod4 + 2 * yearInCenturyDiv4 - paschalFullMoonOffset - yearInCenturyMod4) % 7;\n    const paschalAdjustment \u003d Math.floor((mod19Result + 11 * paschalFullMoonOffset + 22 * sundayOffset) / 451);\n    const computedMonth \u003d Math.floor((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) / 31);\n    const computedDay \u003d ((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) % 31) + 1;\n    const tempDate \u003d new Date(CatholicEasterCalculateYear, computedMonth - 1, computedDay);\n    const adjustedDay \u003d tempDate.getDate();\n    const adjustedMonth \u003d tempDate.getMonth() + 1; \n    return `${adjustedDay}.${adjustedMonth}`;\n}\n\nfunction catholicEasterDay(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[0], 10);\n}\n\nfunction catholicEasterMonth(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[1], 10);\n}\n\n\nconsole.log(catholicEasterDay({lv\u003dyear}));","disableLogging":false,"m_SIGUID":-4675664005195577345,"m_classType":"JavaScriptAction","m_comment":"Code by github.com/AlexeiCrystal","m_constraintList":[],"m_isDisabled":false,"m_isOrCondition":false},{"blockNextAction":true,"consoleVariableName":"month","javascriptEngine":"JetPack JavascriptEngine","scriptText":"// Code by github.com/AlexeiCrystal\nfunction catholicEaster(CatholicEasterCalculateYear) {\n    const mod19Result \u003d CatholicEasterCalculateYear % 19;\n    const centuryQuotient \u003d Math.floor(CatholicEasterCalculateYear / 100);\n    const yearInCentury \u003d CatholicEasterCalculateYear % 100;\n    const centuryDiv4 \u003d Math.floor(centuryQuotient / 4);\n    const centuryMod4 \u003d centuryQuotient % 4;\n    const centuryAdjust \u003d Math.floor((centuryQuotient + 8) / 25);\n    const centuryAdjust2 \u003d Math.floor((centuryQuotient - centuryAdjust + 1) / 3);\n    const paschalFullMoonOffset \u003d (19 * mod19Result + centuryQuotient - centuryDiv4 - centuryAdjust2 + 15) % 30;\n    const yearInCenturyDiv4 \u003d Math.floor(yearInCentury / 4);\n    const yearInCenturyMod4 \u003d yearInCentury % 4;\n    const sundayOffset \u003d (32 + 2 * centuryMod4 + 2 * yearInCenturyDiv4 - paschalFullMoonOffset - yearInCenturyMod4) % 7;\n    const paschalAdjustment \u003d Math.floor((mod19Result + 11 * paschalFullMoonOffset + 22 * sundayOffset) / 451);\n    const computedMonth \u003d Math.floor((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) / 31);\n    const computedDay \u003d ((paschalFullMoonOffset + sundayOffset - 7 * paschalAdjustment + 114) % 31) + 1;\n    const tempDate \u003d new Date(CatholicEasterCalculateYear, computedMonth - 1, computedDay);\n    const adjustedDay \u003d tempDate.getDate();\n    const adjustedMonth \u003d tempDate.getMonth() + 1; \n    return `${adjustedDay}.${adjustedMonth}`;\n}\n\nfunction catholicEasterDay(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[0], 10);\n}\n\nfunction catholicEasterMonth(CatholicEasterCalculateYear) {\n    const catholicDateResult \u003d catholicEaster(CatholicEasterCalculateYear);\n    return parseInt(catholicDateResult.split(\u0027.\u0027)[1], 10);\n}\n\n\nconsole.log(catholicEasterMonth({lv\u003dyear}));","disableLogging":false,"m_SIGUID":-4974577826123866987,"m_classType":"JavaScriptAction","m_comment":"Code by github.com/AlexeiCrystal","m_constraintList":[],"m_isDisabled":false,"m_isOrCondition":false}],"m_category":"Без категории","m_constraintList":[],"m_description":"Code by github.com/AlexeiCrystal","m_descriptionOpen":false,"m_enabled":false,"m_excludeLog":false,"m_headingColor":0,"m_isOrCondition":false,"m_name":"Catholic-Easter","m_triggerList":[]},"macroExportVersion":1}